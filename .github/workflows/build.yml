name: C/C++ CI

on:
  workflow_dispatch:
  push:
      branches: [ main ]
  pull_request:
      branches: [ main ]

jobs:
  build-and-test:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
        - {
          name: "windows 2019",
          os: windows-2019,
          generators: "Visual Studio 16 2019",
          toolset: "msvc"
          }
        - {
          name: "ubuntu-20.04",
          os: ubuntu-20.04,
          cc: "gcc",
          cxx: "g++",
          generators: "Unix Makefiles",
          toolset: "gcc"
          }
        - {
          name: "macos-11",
          os: macos-11,
          cc: "clang",
          cxx: "clang++",
          generators: "Unix Makefiles",
          toolset: "clang"
          }

    steps:
    - uses: actions/checkout@v2

    - name: cache Boost
      uses: actions/cache@v2
      with:
        path: '${{ runner.workspace }}/boost_*.tar.gz'
        key: 'boost-1.72.0'

    - name: build Boost
      id: boost
      uses: egor-tensin/build-boost@v1
      with:
        version: 1.72.0
        libraries: filesystem
        platform: x64
        configuration: Release
        toolset: ${{ matrix.config.toolset }}

    - name: configure
      run: cmake -S src -B CIBuild -DCMAKE_INSTALL_PREFIX=CIInstall -DCMAKE_BUILD_TYPE=Release -DBOOST_ROOT="${{ steps.boost.outputs.root }}" -DBOOST_LIBRARYDIR="${{ steps.boost.outputs.librarydir }}" -G "${{ matrix.config.generators }}"

    - name: make
      run: cmake --build CIBuild -j2 --config Release

    - name: make test
      run: |
        cd CIBuild
        ctest -V -C Release

    - name: make install
      run:  |
        cmake --build CIBuild --target install --config Release
